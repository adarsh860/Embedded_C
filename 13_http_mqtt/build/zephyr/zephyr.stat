ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x8002519
  Start of program headers:          52 (bytes into file)
  Start of section headers:          3973296 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         7
  Size of section headers:           40 (bytes)
  Number of section headers:         52
  Section header string table index: 51

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        08000000 000120 0001c8 00 WAX  0   0  4
  [ 2] text              PROGBITS        080001d0 0002f0 018b9c 00  AX  0   0 16
  [ 3] .ARM.exidx        ARM_EXIDX       08018d6c 018e8c 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        08018d74 018e94 0000f0 00   A  0   0  4
  [ 5] device_area       PROGBITS        08018e64 018f84 000280 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        080190e4 019204 000310 00  WA  0   0  4
  [ 7] entropy_driv[...] PROGBITS        080193f4 019514 000008 00   A  0   0  4
  [ 8] gpio_driver_[...] PROGBITS        080193fc 01951c 000024 00   A  0   0  4
  [ 9] reset_driver[...] PROGBITS        08019420 019540 000010 00   A  0   0  4
  [10] clock_contro[...] PROGBITS        08019430 019550 00001c 00   A  0   0  4
  [11] mdio_driver_[...] PROGBITS        0801944c 01956c 000018 00   A  0   0  4
  [12] uart_driver_[...] PROGBITS        08019464 019584 000014 00   A  0   0  4
  [13] ethphy_drive[...] PROGBITS        08019478 019598 000028 00   A  0   0  4
  [14] net_l3_regis[...] PROGBITS        080194a0 0195c0 000020 00   A  0   0  4
  [15] net_socket_r[...] PROGBITS        080194c0 0195e0 000010 00   A  0   0  4
  [16] net_socket_s[...] PROGBITS        080194d0 0195f0 00000c 00   A  0   0  4
  [17] log_const_area    PROGBITS        080194dc 0195fc 000148 00   A  0   0  4
  [18] log_backend_area  PROGBITS        08019624 019744 000010 00   A  0   0  4
  [19] tbss              NOBITS          08019634 019754 000008 00 WAT  0   0  4
  [20] rodata            PROGBITS        08019638 019758 002874 00   A  0   0  8
  [21] .ramfunc          PROGBITS        20010000 01cd5c 000000 00   W  0   0  1
  [22] datas             PROGBITS        20010000 01c000 0009b0 00  WA  0   0 64
  [23] device_states     PROGBITS        200109b0 01c9b0 000028 00  WA  0   0  1
  [24] log_mpsc_pbu[...] PROGBITS        200109d8 01c9d8 000040 00  WA  0   0  4
  [25] log_msg_ptr_area  PROGBITS        20010a18 01ca18 000004 00  WA  0   0  4
  [26] k_mem_slab_area   PROGBITS        20010a1c 01ca1c 000054 00  WA  0   0  4
  [27] k_mutex_area      PROGBITS        20010a70 01ca70 0000c8 00  WA  0   0  4
  [28] k_msgq_area       PROGBITS        20010b38 01cb38 000030 00  WA  0   0  4
  [29] k_sem_area        PROGBITS        20010b68 01cb68 000048 00  WA  0   0  4
  [30] k_condvar_area    PROGBITS        20010bb0 01cbb0 000008 00  WA  0   0  4
  [31] net_buf_pool_area PROGBITS        20010bb8 01cbb8 0000dc 00  WA  0   0  4
  [32] net_if_area       PROGBITS        20010c98 01cc98 000090 00  WA  0   0  8
  [33] net_if_dev_area   PROGBITS        20010d28 01cd28 00001c 00  WA  0   0  4
  [34] net_l2_area       PROGBITS        20010d44 01cd44 000014 00   A  0   0  4
  [35] .dtcm_noinit      NOBITS          20000000 01cd5c 003100 00  WA  0   0  4
  [36] .comment          PROGBITS        00000000 01cd5c 000020 01  MS  0   0  1
  [37] .debug_aranges    PROGBITS        00000000 01cd80 003798 00      0   0  8
  [38] .debug_info       PROGBITS        00000000 020518 2504c6 00      0   0  1
  [39] .debug_abbrev     PROGBITS        00000000 2709de 020743 00      0   0  1
  [40] .debug_line       PROGBITS        00000000 291121 0659c1 00      0   0  1
  [41] .debug_frame      PROGBITS        00000000 2f6ae4 00a2b8 00      0   0  4
  [42] .debug_str        PROGBITS        00000000 300d9c 019ebf 01  MS  0   0  1
  [43] .debug_loc        PROGBITS        00000000 31ac5b 07d141 00      0   0  1
  [44] .debug_ranges     PROGBITS        00000000 397da0 012570 00      0   0  8
  [45] .ARM.attributes   ARM_ATTRIBUTES  00000000 3aa310 000032 00      0   0  1
  [46] .last_section     PROGBITS        0801cc04 01cd58 000004 00  WA  0   0  4
  [47] bss               NOBITS          20010d58 01cd98 001751 00  WA  0   0  8
  [48] noinit            NOBITS          200124c0 01cd98 0066c8 00  WA  0   0 64
  [49] .symtab           SYMTAB          00000000 3aa344 012490 10     50 2968  4
  [50] .strtab           STRTAB          00000000 3bc7d4 00d610 00      0   0  1
  [51] .shstrtab         STRTAB          00000000 3c9de4 0002c9 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x018e8c 0x08018d6c 0x08018d6c 0x00008 0x00008 R   0x4
  LOAD           0x000120 0x08000000 0x08000000 0x1beac 0x1beac RWE 0x10
  LOAD           0x01c000 0x20010000 0x0801beac 0x00d58 0x00d58 RW  0x40
  LOAD           0x01cd58 0x0801cc04 0x0801cc04 0x00004 0x00004 RW  0x4
  LOAD           0x000000 0x20000000 0x20000000 0x00000 0x03100 RW  0x4
  LOAD           0x000000 0x20010d58 0x20010d58 0x00000 0x07e30 RW  0x40
  TLS            0x019754 0x08019634 0x08019634 0x00000 0x00008 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table entropy_driver_api_area gpio_driver_api_area reset_driver_api_area clock_control_driver_api_area mdio_driver_api_area uart_driver_api_area ethphy_driver_api_area net_l3_register_area net_socket_register_area net_socket_service_desc_area log_const_area log_backend_area rodata 
   02     datas device_states log_mpsc_pbuf_area log_msg_ptr_area k_mem_slab_area k_mutex_area k_msgq_area k_sem_area k_condvar_area net_buf_pool_area net_if_area net_if_dev_area net_l2_area 
   03     .last_section 
   04     .dtcm_noinit 
   05     bss noinit 
   06     tbss 
